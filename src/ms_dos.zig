const std = @import("std");

pub const Header = struct {
    pub const total_bytes: u64 = 128;

    signature: [2]u8 = [2]u8{
        0x4d, 0x5a,
    },
    dos_header: [58]u8 = [58]u8{
        // zig fmt: off
                    0x90, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 
        0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        // zig fmt: on
    },
    pe_signature_offset: u32,
    dos_stub: [64]u8 = [64]u8{
        0x0e, 0x1f, 0xba, 0x0e, 0x00, 0xb4, 0x09, 0xcd,
        0x21, 0xb8, 0x01, 0x4c, 0xcd, 0x21, 0x54, 0x68,
        0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72,
        0x61, 0x6d, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f,
        0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6e,
        0x20, 0x69, 0x6e, 0x20, 0x44, 0x4f, 0x53, 0x20,
        0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x0d, 0x0d, 0x0a,
        0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    },

    pub fn write(self: *@This(), writer: *std.Io.Writer) !void {
        // zig fmt: off
        _ = try writer.write(
            &self.signature ++ 
            &self.dos_header ++ 
            bytes(4, self.pe_signature_offset) ++ 
            &self.dos_stub
        );
        // zig fmt: on
    }
};

fn bytes(comptime size: u64, value: anytype) [size]u8 {
    return @bitCast(value);
}
